"use strict";(self.webpackChunk_discretize_gw2_ui_new=self.webpackChunk_discretize_gw2_ui_new||[]).push([[404],{"./src/components/Skill/Skill.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FixedSkills:()=>FixedSkills,Languages:()=>Languages,LavaFont:()=>LavaFont,Multiple:()=>Multiple,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Skill_stories});__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var i18n=__webpack_require__("./src/i18n/index.ts"),hooks=__webpack_require__("./src/gw2api/hooks.ts"),Error=__webpack_require__("./src/components/Error/Error.tsx"),IconWithText=__webpack_require__("./src/components/IconWithText/IconWithText.tsx"),clsx=__webpack_require__("../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"),AbilityDetails=__webpack_require__("./src/components/AbilityDetails/AbilityDetails.tsx"),professions_module=__webpack_require__("./src/components/Profession/professions.module.css"),Tooltip=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),WikiLink=__webpack_require__("./src/components/WikiLink/WikiLink.tsx"),jsx_runtime=__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const SkillInternal=props=>{const{data,text,disableLink,disableTooltip,tooltipProps,wikiLinkProps}=props,{name,icon,professions}=data,profession=professions?.[0];return(0,jsx_runtime.jsx)(Tooltip.A,{content:(0,jsx_runtime.jsx)(AbilityDetails.A,{data}),disabled:disableTooltip,...tooltipProps,children:(0,jsx_runtime.jsx)(IconWithText.A,{...props,icon,text:disableLink?text||name:(0,jsx_runtime.jsx)(WikiLink.A,{to:name,text,...wikiLinkProps,className:(0,clsx.A)(profession&&professions_module.A[`coloredProfession${profession}`],wikiLinkProps?.className)}),className:(0,clsx.A)(props.className,profession&&professions_module.A[`coloredProfession${profession}`])})})},Skill_SkillInternal=SkillInternal;try{SkillInternal.displayName="SkillInternal",SkillInternal.__docgenInfo={description:"",displayName:"SkillInternal",props:{data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"GW2ApiSkill"}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string"}},disableLink:{defaultValue:null,description:"",name:"disableLink",required:!1,type:{name:"boolean"}},disableTooltip:{defaultValue:null,description:"",name:"disableTooltip",required:!1,type:{name:"boolean"}},tooltipProps:{defaultValue:null,description:"",name:"tooltipProps",required:!1,type:{name:"TooltipProps"}},wikiLinkProps:{defaultValue:null,description:"",name:"wikiLinkProps",required:!1,type:{name:"WikiLinkProps"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},disableIcon:{defaultValue:null,description:"",name:"disableIcon",required:!1,type:{name:"boolean"}},disableText:{defaultValue:null,description:"",name:"disableText",required:!1,type:{name:"boolean"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLSpanElement>"}},iconProps:{defaultValue:null,description:"",name:"iconProps",required:!1,type:{name:"IconProps"}},textProps:{defaultValue:null,description:"",name:"textProps",required:!1,type:{name:"any"}},progressProps:{defaultValue:null,description:"",name:"progressProps",required:!1,type:{name:"ProgressProps"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Skill/SkillInternal.tsx#SkillInternal"]={docgenInfo:SkillInternal.__docgenInfo,name:"SkillInternal",path:"src/components/Skill/SkillInternal.tsx#SkillInternal"})}catch(__react_docgen_typescript_loader_error){}const SKILL_ERROR_NAMES={404:"Skill Not Found",500:"Network Error"},SKILL_ERROR_MESSAGES={404:id=>`The requested skill with the id ${id} was not found.`,500:id=>`A Network Error occured trying to fetch the skill ${id}.`},Skill=props=>{const skill=(0,hooks.Pt)(props.id);return skill.loading?(0,jsx_runtime.jsx)(IconWithText.A,{...props,loading:!0}):skill.error?(0,jsx_runtime.jsx)(Error.A,{...props,code:skill.error,name:SKILL_ERROR_NAMES,message:SKILL_ERROR_MESSAGES}):(0,jsx_runtime.jsx)(Skill_SkillInternal,{...props,data:skill.data})},Skill_Skill=Skill;try{Skill.displayName="Skill",Skill.__docgenInfo={description:"",displayName:"Skill",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},disableIcon:{defaultValue:null,description:"",name:"disableIcon",required:!1,type:{name:"boolean"}},disableText:{defaultValue:null,description:"",name:"disableText",required:!1,type:{name:"boolean"}},disableLink:{defaultValue:null,description:"",name:"disableLink",required:!1,type:{name:"boolean"}},disableTooltip:{defaultValue:null,description:"",name:"disableTooltip",required:!1,type:{name:"boolean"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},tooltipProps:{defaultValue:null,description:"",name:"tooltipProps",required:!1,type:{name:"TooltipProps"}},wikiLinkProps:{defaultValue:null,description:"",name:"wikiLinkProps",required:!1,type:{name:"WikiLinkProps"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLSpanElement>"}},iconProps:{defaultValue:null,description:"",name:"iconProps",required:!1,type:{name:"IconProps"}},textProps:{defaultValue:null,description:"",name:"textProps",required:!1,type:{name:"any"}},progressProps:{defaultValue:null,description:"",name:"progressProps",required:!1,type:{name:"ProgressProps"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Skill/Skill.tsx#Skill"]={docgenInfo:Skill.__docgenInfo,name:"Skill",path:"src/components/Skill/Skill.tsx#Skill"})}catch(__react_docgen_typescript_loader_error){}const Skill_stories={title:"Components/Skill",component:Skill_Skill,argTypes:{className:{control:!1}}},LavaFont={render:args=>(0,jsx_runtime.jsx)(Skill_Skill,{...args}),args:{id:5548}};function Multiple(){return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["The meta rotation is ",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})," → ",(0,jsx_runtime.jsx)(Skill_Skill,{id:5564})," →"," ",(0,jsx_runtime.jsx)(Skill_Skill,{id:1175}),". When ",(0,jsx_runtime.jsx)(Skill_Skill,{id:1175})," finishes,"," ",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})," should be off cooldown, making for a smooth rotation.",(0,jsx_runtime.jsx)("br",{}),"Do not cast ",(0,jsx_runtime.jsx)(Skill_Skill,{id:42}),", because that skill does not exist."]}),(0,jsx_runtime.jsx)("p",{children:"Check your browser console - there should be a single request to the API, fetching all skills in a single request, and fetching the duplicate skills only once:"}),(0,jsx_runtime.jsx)("pre",{children:"https://api.guildwars2.com/v2/skills?ids=[list of ids]"}),(0,jsx_runtime.jsx)("p",{children:"And if you browse to another component and back, there should be no request at all."})]})}function FixedSkills(){return(0,jsx_runtime.jsxs)("div",{children:["These skills have inconsistencies in the API, which should be fixed automatically.",(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("br",{}),"Should have Life Force cost in percent:",(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(Skill_Skill,{id:40813}),(0,jsx_runtime.jsx)(Skill_Skill,{id:43448}),(0,jsx_runtime.jsx)(Skill_Skill,{id:44428}),(0,jsx_runtime.jsx)(Skill_Skill,{id:44663}),(0,jsx_runtime.jsx)(Skill_Skill,{id:54870}),(0,jsx_runtime.jsx)("br",{}),"Should show maximum heat in percent:",(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(Skill_Skill,{id:42938}),(0,jsx_runtime.jsx)("br",{})]})}function Languages(){return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["Default language:",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})]}),(0,jsx_runtime.jsx)(i18n.SU,{value:"de",children:(0,jsx_runtime.jsxs)("p",{children:["de:",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})]})}),(0,jsx_runtime.jsx)(i18n.SU,{value:"en",children:(0,jsx_runtime.jsxs)("p",{children:["en:",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})]})}),(0,jsx_runtime.jsx)(i18n.SU,{value:"es",children:(0,jsx_runtime.jsxs)("p",{children:["es:",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})]})}),(0,jsx_runtime.jsx)(i18n.SU,{value:"fr",children:(0,jsx_runtime.jsxs)("p",{children:["fr:",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})]})}),(0,jsx_runtime.jsx)(i18n.SU,{value:"zh",children:(0,jsx_runtime.jsxs)("p",{children:["zh:",(0,jsx_runtime.jsx)(Skill_Skill,{id:5548})]})})]})}const __namedExportsOrder=["LavaFont","Multiple","FixedSkills","Languages"];LavaFont.parameters={...LavaFont.parameters,docs:{...LavaFont.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    id: 5548\n  }\n}",...LavaFont.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:"function Multiple() {\n  return <div>\n      <p>\n        The meta rotation is <Skill id={5548} /> → <Skill id={5564} /> →{' '}\n        <Skill id={1175} />. When <Skill id={1175} /> finishes,{' '}\n        <Skill id={5548} /> should be off cooldown, making for a smooth\n        rotation.\n        <br />\n        Do not cast <Skill id={42} />, because that skill does not exist.\n      </p>\n      <p>\n        Check your browser console - there should be a single request to the\n        API, fetching all skills in a single request, and fetching the duplicate\n        skills only once:\n      </p>\n      <pre>https://api.guildwars2.com/v2/skills?ids=[list of ids]</pre>\n      <p>\n        And if you browse to another component and back, there should be no\n        request at all.\n      </p>\n    </div>;\n}",...Multiple.parameters?.docs?.source}}},FixedSkills.parameters={...FixedSkills.parameters,docs:{...FixedSkills.parameters?.docs,source:{originalSource:"function FixedSkills() {\n  return <div>\n      These skills have inconsistencies in the API, which should be fixed\n      automatically.\n      <br />\n      <br />\n      Should have Life Force cost in percent:\n      <br />\n      <Skill id={40813} />\n      <Skill id={43448} />\n      <Skill id={44428} />\n      <Skill id={44663} />\n      <Skill id={54870} />\n      <br />\n      Should show maximum heat in percent:\n      <br />\n      <Skill id={42938} />\n      <br />\n    </div>;\n}",...FixedSkills.parameters?.docs?.source}}},Languages.parameters={...Languages.parameters,docs:{...Languages.parameters?.docs,source:{originalSource:'function Languages() {\n  return <div>\n      <p>\n        Default language:\n        <Skill id={5548} />\n      </p>\n\n      <APILanguageProvider value="de">\n        <p>\n          de:\n          <Skill id={5548} />\n        </p>\n      </APILanguageProvider>\n\n      <APILanguageProvider value="en">\n        <p>\n          en:\n          <Skill id={5548} />\n        </p>\n      </APILanguageProvider>\n\n      <APILanguageProvider value="es">\n        <p>\n          es:\n          <Skill id={5548} />\n        </p>\n      </APILanguageProvider>\n\n      <APILanguageProvider value="fr">\n        <p>\n          fr:\n          <Skill id={5548} />\n        </p>\n      </APILanguageProvider>\n\n      <APILanguageProvider value="zh">\n        <p>\n          zh:\n          <Skill id={5548} />\n        </p>\n      </APILanguageProvider>\n    </div>;\n}',...Languages.parameters?.docs?.source}}}}}]);